# Specific settings for each sub-chart
tntk-web:
  fullnameOverride: "web"
  replicaCount: 1
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: ""
  serviceAccount:
    create: false
  service:
    type: ClusterIP
    port: 80
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  configmapData:
    PORT: "80"
  ingress:
    enabled: true
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
tntk-orders:
  fullnameOverride: "orders"
  replicaCount: 1
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: ""
  serviceAccount:
    create: false
  service:
    type: ClusterIP
    port: 80
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  postgresql:
    host: postgres
    port: 5432
    username: postgres
    password: postgres
    database: postgres
  redis:
    host: redis
  rabbitmq:
    host: rabbitmq
tntk-auth:
  fullnameOverride: "auth"
  replicaCount: 1
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: "817bc35721eedc25102b6b4b639e6d90d590c9be"
  serviceAccount:
    create: false
  service:
    type: ClusterIP
    port: 8002
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
tntk-products:
  fullnameOverride: "products"
  replicaCount: 1
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: "ff8ef356c0e5ff9c71b34ab868d3e978a47272cc"
  serviceAccount:
    create: false
  service:
    type: ClusterIP
    port: 8000
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
shared-resources:
  fullnameOverride: "shared-resources"
  replicaCount: 1
  aws:
    region: us-east-2
  global:
    nodeSelector: {}
    tolerations: []
    affinity: {}
    service:
      port: 80
  ingress:
    enabled: true
    className: "alb"
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\": 443}]'
      alb.ingress.kubernetes.io/ssl-redirect: 443
      # Add other annotations as needed
      # nginx.ingress.kubernetes.io/rewrite-target: /
      # kubernetes.io/tls-acme: "true"
    # TLS configuration
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

    # Ingress hosts configuration
    hosts:
      - host: "argocd.test.com"
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80
